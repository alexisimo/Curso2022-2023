11-05 10:55:13 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Table LINKRULES not found; SQL statement:
DELETE FROM  LINKRULES; [42S02-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.command.Parser.readTableOrView(Parser.java:3911)
	at org.h2.command.Parser.readTableOrView(Parser.java:3891)
	at org.h2.command.Parser.readSimpleTableFilter(Parser.java:645)
	at org.h2.command.Parser.parseDelete(Parser.java:663)
	at org.h2.command.Parser.parsePrepared(Parser.java:304)
	at org.h2.command.Parser.parse(Parser.java:260)
	at org.h2.command.Parser.parse(Parser.java:232)
	at org.h2.command.Parser.prepareCommand(Parser.java:204)
	at org.h2.engine.Session.prepareLocal(Session.java:172)
	at org.h2.engine.Session.prepareCommand(Session.java:154)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:971)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:1208)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:165)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:365)
	at helio.materialiser.evaluator.H2Evaluator.initH2Cache(H2Evaluator.java:143)
	at helio.materialiser.HelioMaterialiser.<init>(HelioMaterialiser.java:43)
	at semanticgateway.service.MaterialiserService.addMappings(MaterialiserService.java:24)
	at semanticgateway.service.SemanticDataService.initialiseMaterialiser(SemanticDataService.java:48)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.initialiseMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.firstVirtualization(IndexController.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:309)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1691)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at semanticgateway.SemanticGatewayApplication.main(SemanticGatewayApplication.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.PropertiesLauncher.main(PropertiesLauncher.java:593)
11-05 10:58:34 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 10:58:34 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$74cda3b2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[102]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[103]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[104]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[105]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[106]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[107]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[108]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[109]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[110]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[111]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[112]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[113]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[114]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[115]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[116]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[117]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[118]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[119]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[120]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[121]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[122]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[123]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[124]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[125]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[126]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[127]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[128]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[129]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[130]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[131]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[132]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[133]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[134]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[135]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[136]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[137]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[138]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[139]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[140]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[141]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[142]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[143]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[144]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[145]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[146]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[147]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[148]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[149]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[150]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:22:44 jdbc[151]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$8aa39829.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:30 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:50:31 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5159479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 12:54:14 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$725b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[624]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[625]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[626]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[628]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[629]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[630]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[631]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[632]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[633]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[634]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[635]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[636]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[637]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[638]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[639]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[640]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[641]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[642]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[643]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[644]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[645]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[646]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[647]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[648]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[649]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[650]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[651]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[652]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[653]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[654]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[655]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[656]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[657]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[658]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[659]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[660]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[661]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[662]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[663]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[664]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[665]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[666]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[667]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[668]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[669]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[670]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[671]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[672]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[673]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 20:21:30 jdbc[674]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$38cf3771.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[202]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[203]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[204]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[205]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[206]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[207]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[208]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[209]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[210]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[211]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[212]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[213]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[214]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[215]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[216]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[217]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[218]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[219]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[220]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[221]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[222]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[223]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[224]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[225]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[226]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[227]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[228]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[229]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[230]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[231]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[232]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[233]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[234]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[235]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[236]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[237]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[238]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[239]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[240]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[241]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[242]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[243]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[244]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[245]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[246]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[247]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[248]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[249]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[250]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-05 23:28:48 jdbc[251]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$c237d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-06 20:51:35 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:364)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:35)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:56)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$433a881.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
